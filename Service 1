package main

import (
	"encoding/json"
	"net/http"

	"github.com/gorilla/mux"
	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/sqlite"
)

type Movie struct {
	Name   string `gorm:"unique"`
	Review string
}
type App struct {
	DB *gorm.DB
}

func (a *App) Initialize(dbDriver string, dbURI string) {
	db, err := gorm.Open(dbDriver, dbURI)
	if err != nil {
		panic("failed to connect database")
	}
	a.DB = db
	a.DB.AutoMigrate(&Movie{})
}
func (a *App) ListHandler(w http.ResponseWriter, r *http.Request) {
	var movies []Movie

	a.DB.Find(&movies)
	moviesJSON, _ := json.Marshal(movies)

	w.WriteHeader(200)
	w.Write([]byte(moviesJSON))
}

func main() {
	a := &App{}
	a.Initialize("sqlite3", "test.db")
	r := mux.NewRouter()
	r.HandleFunc("/movies", a.ListHandler).Methods("GET")
	http.Handle("/", r)
	if err := http.ListenAndServe(":8080", nil); err != nil {
		panic(err)
	}
	defer a.DB.Close()
}

